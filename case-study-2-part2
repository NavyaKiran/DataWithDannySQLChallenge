select * from pizza_runner.customer_orders;
select * from pizza_runner.pizza_names;
select * from pizza_runner.pizza_recipes;
select * from pizza_runner.pizza_toppings;
select * from pizza_runner.runner_orders;
select * from pizza_runner.runners;

update pizza_runner.customer_orders
set 
  exclusions = case when exclusions = 'null' then null else exclusions end 
  , extras =  case when extras = 'null' then null else extras end 
  
update pizza_runner.runner_orders 
set 
  distance = case when distance = 'null' then null else distance end, 
  duration = case when duration = 'null' then null else duration end, 
  pickup_time = case when pickup_time = 'null' then null else pickup_time end, 
  cancellation = case when cancellation = 'null' then null else cancellation end
  
update pizza_runner.runner_orders
set
distance = case when distance like '%km' then trim('km' from distance) else distance end 

update pizza_runner.runner_orders 
set 
  duration = case when duration like '%mins' then trim('mins' from duration) 
                  when duration like '%minutes' then trim('minutes' from duration) 
                  when duration like '%minute' then trim('minute' from duration)
                  else duration
              end

ALTER table pizza_runner.runner_orders
alter column pickup_time type timestamp using pickup_time::timestamp

ALTER table pizza_runner.runner_orders
alter column distance type decimal(4,2) using distance::decimal(4,2), 
alter column duration type int using duration::int


--PART B : Runner and Customer Experience 

select * from pizza_runner.runners;


--How many runners signed up for each 1 week period? (i.e. week starts 2021-01-01)

--What was the average time in minutes it took for each runner to arrive at the Pizza Runner HQ to pickup the order?

  select runner_id, round(avg(date_part('min', pickup_time-order_time))::int, 2) as minute_diff
  from
  (select distinct a.order_id, b.runner_id, a.order_time, b.pickup_time 
  from pizza_runner.customer_orders a inner join pizza_runner.runner_orders b on a.order_id = b.order_id 
  where b.pickup_time is not null) temp
  group by runner_id



--Is there any relationship between the number of pizzas and how long the order takes to prepare?

select distinct cnt as pizza_count, avg(avg_time) 
from 
(select distinct a.order_id, count(a.pizza_id) as cnt, avg(date_part('min', age(b.pickup_time, a.order_time))) as avg_time
from pizza_runner.customer_orders a inner join pizza_runner.runner_orders b on a.order_id = b.order_id 
where b.pickup_time is not null
group by a.order_id
order by order_id)
group by pizza_count
order by pizza_count



-- What was the average distance traveled for each customer?

select * from pizza_runner.customer_orders
select * from pizza_runner.runner_orders

select customer_id, round(avg(distance),2) as average_distance
from
(select distinct a.order_id,a.customer_id, b.distance
from pizza_runner.customer_orders a inner join pizza_runner.runner_orders b on a.order_id = b.order_id
where distance is not null) temp 
group by customer_id
order by customer_id


--What was the difference between the longest and shortest delivery times for all orders?

select max_time_taken - min_time_taken as longest_duration
from 
(
select min(duration) as min_time_taken, max(duration) as max_time_taken
from pizza_runner.runner_orders
where duration is not null) temp 

--What was the average speed for each runner for each delivery and do you notice any trend for these values?

select distinct a.order_id,b.runner_id, a.customer_id, a.pizza_id, b.duration, b.distance, round(b.distance*60/b.duration, 2) as avg_speed
from pizza_runner.customer_orders a 
inner join pizza_runner.runner_orders b on a.order_id = b.order_id
where b.distance is not null
order by a.order_id


--What is the successful delivery percentage for each runner?

select runner_id, round(100.0*sum(case when pickup_time is null then 0 else 1 end)/count(*), 2) as order_pcnt
from pizza_runner.runner_orders
group by runner_id
order by runner_id
